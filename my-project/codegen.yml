generates:
  # Generate a types file
  node_modules/@graphcommerce/graphql/generated/types.ts:
    schema:
      - ${NEXT_PUBLIC_GRAPHQL_ENDPOINT}
      - '**/*.graphqls'
      - node_modules/@graphcommerce/**/*.graphqls
    plugins:
      - typescript
      - typescript-apollo-client-helpers
      - add
    config:
      enumsAsTypes: true
      content: '/* eslint-disable */'
  # Generate a fragments.json
  node_modules/@graphcommerce/graphql/generated/fragments.json:
    schema:
      - ${NEXT_PUBLIC_GRAPHQL_ENDPOINT}
      - '**/*.graphqls'
      - node_modules/@graphcommerce/**/*.graphqls
    plugins:
      - fragment-matcher
  # Generate .gql.ts files for each GraphQL file
  .:
    schema:
      - ${NEXT_PUBLIC_GRAPHQL_ENDPOINT}
      - '**/*.graphqls'
      - node_modules/@graphcommerce/**/*.graphqls
    documents:
      - 'components/**/*.graphql'
      - 'graphql/**/*.graphql'
      - 'node_modules/@graphcommerce/**/*.graphql'
    plugins:
      - '@graphcommerce/graphql-codegen-relay-optimizer-plugin'
      - typed-document-node
      - typescript-operations
      - add
    preset: '@graphcommerce/graphql-codegen-near-operation-file'
    presetConfig:
      extension: .gql.ts
      baseTypesPath: ~@graphcommerce/graphql
      injectables: true
    config:
      skipTypename: true
      dedupeOperationSuffix: true
      content: '/* eslint-disable */'
watchConfig:
  usePolling: false
